---
version: '3.8'
name: "restapi-stack"
services:
  app:
    build: .
    container_name: fastapi-app
    env_file: "${APP_ENV_FILE}"
    environment:
      SECRETS_DIR: "${CONTAINER_SECRETS_DIR}"
    secrets:
      - sql_db_password
      - mongo_db_password
    depends_on:
      postgresdb:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    expose:
      - 8000
    networks:
      - backend
      - front
    restart: "no"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`fastapi.localhost`)"
  postgresdb:
    image: postgres:15-alpine
    container_name: fastapi-relationaldb
    volumes:
      - postgresdb_data:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file: "${POSTGRESDB_ENV_FILE}"
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/sql_db_password
    secrets:
      - sql_db_password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend
    restart: always
  mongodb:
    image: mongo:6.0.7
    container_name: fastapi-documentdb
    volumes:
      - mongodb_data:/data/db
      - mongoconfig:/data/configdb
      - ./resources/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    expose:
      - 27017
    ports:
      - "27017:27017" # debugging purpose not required to run application
    env_file: "${MONGODB_ENV_FILE}"
    environment:
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_db_password
    secrets:
      - mongo_db_password
    command: [--auth]
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - backend
    restart: always
  traefik:
    image: traefik:v3.0
    ports:
      - "8000:80"
      - "8081:8080"
    volumes:
      - "./resources/traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - front

networks:
  backend:
  front:

volumes:
  postgresdb_data:
  mongodb_data:
  mongoconfig:

secrets:
  sql_db_password:
    file: resources/postgresdb_password.txt
  mongo_db_password:
    file: resources/mongodb_password.txt
